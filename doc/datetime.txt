*datetime.txt*  Plugin for datetime manipulations in pure Vim Script.


    VIM-DATETIME



INTRODUCTION                                    *datetime*

  A "datetime" object in Vim is a dictionary containing six keys:
  
      { 'year', 'month', 'day', 'hour', 'minute', 'second' }

  The value of each key is assumed be an integer, which has the consequence
  that divisions of time smaller than a second are not supported.

  Functions are provided to convert between datetimes and formatted strings,
  using familiar formatting directives. There are also functions to
  manipulate datetime objects themselves.


FUNCTIONS                                       *datetime-functions*
 
  datetime#init({Y},{m},{d},{H},{M},{S})        *datetime#init()*
      Construct a datetime from a set of integers.
      The time arguments ({H},{M},{S}) are optional.

  datetime#strptime({string},{format})          *datetime#strptime()*
      Convert a string into a datetime according to {format}.
      See |datetime-format| for formatting directives.

  datetime#strftime({dt},{format})              *datetime#strftime()*
      Convert a datetime into a string according to {format}.
      See |datetime-format| for formatting directives.

  datetime#reformat({str},{format1},{format2})  *datetime#reformat()*
      Receive and string in {format1} and return a string in {format2}.
      This is equivalent to using |datetime#strptime()| followed by
      |datetime#strftime()|.

  datetime#add_day({dt},{inc})                  *datetime#add_day()*
      Add a number of days onto a datetime. If a 6-element datetime is
      supplied, the time (last 3 elements) are unchanged.

  datetime#add_second({dt},{inc})               *datetime#add_second()*
      Add a number of seconds onto a datetime. Of course, this might also
      change the date.

  datetime#compare({dt1},{dt2})                 *datetime#compare()*
      A comparator function which may be used for sorting datetimes.
      It returns the standard Vim difference convention:
            {dt1} == {dt2}  :  0
            {dt1} >  {dt2}  :  1
            {dt1} <  {dt2}  : -1

  datetime#delta({dt1},{dt2})                   *datetime#delta()*
      Returns the difference between two datetimes ({dt2} - {dt1}).
      A delta is a 2-element list consisting of the date difference (in days)
      followed by the time difference (in seconds). 
      One or both of these elements may be negative.

  datetime#month_range({dt})                    *datetime#month_range()*
      Return a list of two datetimes corresponding to the month
      containing the supplied datetime.   

  datetime#now()                                *datetime#now()*
      Return the datetime corresponding to Vim's native |strftime()|.

  datetime#unixtime({dt})                       *datetime#unixtime()*
      Convert a datetime to unix time. This is an integer representing the
      number of seconds since the epoch: [ 1970, 1, 1, 0, 0, 0 ].

  datetime#week_range({dt})                     *datetime#week_range()*
      Return a list of two datetimes corresponding to the Monday - Friday
      range containing the supplied datetime.   


FORMATTING DIRECTIVES                           *datetime-format*

  Where possible the supported formatting directives agree with the Python
  datetime package. Exceptions are %D (for ordinal day of the month) and
  %s (for unix time).

  %y    Year without century                 00,...,99        *datetime-%y*
  %Y    Year with century as a decimal       1970,2001        *datetime-%Y*
  %p    AM or PM                             AM,PM            *datetime-%p*
  %b    Month as abbreviated name            Jan,Feb          *datetime-%b*
  %B    Month as full name                   January,April    *datetime-%B*
  %m    Month as zero-padded decimal         01,...,12        *datetime-%m*
  %d    Day of the month                     01,...,31        *datetime-%d*
  %D    Day of the month with ordinal        1st,...,31st     *datetime-%D*
  %a    Weekday as abbreviated name          Sun,Mon          *datetime-%a*
  %A    Weekday as full name                 Sunday,Monday    *datetime-%A*
  %j    Day of the year                      001,...,366      *datetime-%j*
  %w    Weekday as a decimal number          0,...,6          *datetime-%w*
  %U    Week number of year (start Sunday)   00,...,53        *datetime-%U*
  %W    Week number of year (start Monday)   00,...,53        *datetime-%W*
  %H    Hour (24-hour clock)                 00,...,23        *datetime-%H*
  %I    Hour (12-hour clock)                 01,...,12        *datetime-%I*
  %M    Minute                               00,...,59        *datetime-%M*
  %S    Second                               00,...,59        *datetime-%S*
  %s    Seconds since the Unix epoch         1463598841       *datetime-%s*

  %%    Literal %                            %                *datetime-%%*

  %x    Equivalent to %d-%m-%Y               18-05-2016       *datetime-%x*
  %X    Equivalent to %H:%M:%S               19:14:01         *datetime-%X*
  %c    Equivalent to %x %X                                   *datetime-%c*


LIMITATIONS                                     *datetime-limitations*

  Currently divisions of time smaller than a second are not supported.
  This would require adding another integer-valued key could be added,
  representing centi-/milli-/micro-seconds. This change should probably
  be protected by an global option.

  Leap seconds and locales are not supported.


CHANGELOG                                       *datetime-changelog*

  Git Source: http://github.com/jpfudger/vim-datetime
  Shamelessly ported from the source code of the Python datetime package:
    http://fossies.org/dox/Python-3.5.1/datetime_8py_source.html

  18-May-2016     First release.
  19-May-2016     Add |datetime#reformat()|.
  20-May-2016     Change list do dictionary and add |datetime#init()|.
  08-Jun-2016     Add support for %s in strptime and %D in strftime.

vim:tw=78:ts=8:ft=help
